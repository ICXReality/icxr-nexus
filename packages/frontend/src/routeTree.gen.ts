/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DashboardRouteImport } from './routes/_dashboard'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as DashboardIndexRouteImport } from './routes/_dashboard/index'
import { Route as AuthRegisterRouteImport } from './routes/_auth/register'
import { Route as AuthLoginRouteImport } from './routes/_auth/login'
import { Route as DashboardNewsIndexRouteImport } from './routes/_dashboard/news/index'
import { Route as DashboardEventsIndexRouteImport } from './routes/_dashboard/events/index'
import { Route as DashboardClubsIndexRouteImport } from './routes/_dashboard/clubs/index'
import { Route as DashboardClubsApplyIndexRouteImport } from './routes/_dashboard/clubs/apply/index'
import { Route as DashboardClubsIdIndexRouteImport } from './routes/_dashboard/clubs/$id/index'
import { Route as DashboardClubsIdEditRouteImport } from './routes/_dashboard/clubs/$id/edit'

const DashboardRoute = DashboardRouteImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)
const AuthRegisterRoute = AuthRegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthRoute,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)
const DashboardNewsIndexRoute = DashboardNewsIndexRouteImport.update({
  id: '/news/',
  path: '/news/',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardEventsIndexRoute = DashboardEventsIndexRouteImport.update({
  id: '/events/',
  path: '/events/',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardClubsIndexRoute = DashboardClubsIndexRouteImport.update({
  id: '/clubs/',
  path: '/clubs/',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardClubsApplyIndexRoute =
  DashboardClubsApplyIndexRouteImport.update({
    id: '/clubs/apply/',
    path: '/clubs/apply/',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardClubsIdIndexRoute = DashboardClubsIdIndexRouteImport.update({
  id: '/clubs/$id/',
  path: '/clubs/$id/',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardClubsIdEditRoute = DashboardClubsIdEditRouteImport.update({
  id: '/clubs/$id/edit',
  path: '/clubs/$id/edit',
  getParentRoute: () => DashboardRoute,
} as any)

export interface FileRoutesByFullPath {
  '/login': typeof AuthLoginRoute
  '/register': typeof AuthRegisterRoute
  '/': typeof DashboardIndexRoute
  '/clubs': typeof DashboardClubsIndexRoute
  '/events': typeof DashboardEventsIndexRoute
  '/news': typeof DashboardNewsIndexRoute
  '/clubs/$id/edit': typeof DashboardClubsIdEditRoute
  '/clubs/$id': typeof DashboardClubsIdIndexRoute
  '/clubs/apply': typeof DashboardClubsApplyIndexRoute
}
export interface FileRoutesByTo {
  '/login': typeof AuthLoginRoute
  '/register': typeof AuthRegisterRoute
  '/': typeof DashboardIndexRoute
  '/clubs': typeof DashboardClubsIndexRoute
  '/events': typeof DashboardEventsIndexRoute
  '/news': typeof DashboardNewsIndexRoute
  '/clubs/$id/edit': typeof DashboardClubsIdEditRoute
  '/clubs/$id': typeof DashboardClubsIdIndexRoute
  '/clubs/apply': typeof DashboardClubsApplyIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_auth': typeof AuthRouteWithChildren
  '/_dashboard': typeof DashboardRouteWithChildren
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/register': typeof AuthRegisterRoute
  '/_dashboard/': typeof DashboardIndexRoute
  '/_dashboard/clubs/': typeof DashboardClubsIndexRoute
  '/_dashboard/events/': typeof DashboardEventsIndexRoute
  '/_dashboard/news/': typeof DashboardNewsIndexRoute
  '/_dashboard/clubs/$id/edit': typeof DashboardClubsIdEditRoute
  '/_dashboard/clubs/$id/': typeof DashboardClubsIdIndexRoute
  '/_dashboard/clubs/apply/': typeof DashboardClubsApplyIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/login'
    | '/register'
    | '/'
    | '/clubs'
    | '/events'
    | '/news'
    | '/clubs/$id/edit'
    | '/clubs/$id'
    | '/clubs/apply'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/register'
    | '/'
    | '/clubs'
    | '/events'
    | '/news'
    | '/clubs/$id/edit'
    | '/clubs/$id'
    | '/clubs/apply'
  id:
    | '__root__'
    | '/_auth'
    | '/_dashboard'
    | '/_auth/login'
    | '/_auth/register'
    | '/_dashboard/'
    | '/_dashboard/clubs/'
    | '/_dashboard/events/'
    | '/_dashboard/news/'
    | '/_dashboard/clubs/$id/edit'
    | '/_dashboard/clubs/$id/'
    | '/_dashboard/clubs/apply/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  DashboardRoute: typeof DashboardRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_dashboard/': {
      id: '/_dashboard/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_auth/register': {
      id: '/_auth/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof AuthRegisterRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_dashboard/news/': {
      id: '/_dashboard/news/'
      path: '/news'
      fullPath: '/news'
      preLoaderRoute: typeof DashboardNewsIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/events/': {
      id: '/_dashboard/events/'
      path: '/events'
      fullPath: '/events'
      preLoaderRoute: typeof DashboardEventsIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/clubs/': {
      id: '/_dashboard/clubs/'
      path: '/clubs'
      fullPath: '/clubs'
      preLoaderRoute: typeof DashboardClubsIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/clubs/apply/': {
      id: '/_dashboard/clubs/apply/'
      path: '/clubs/apply'
      fullPath: '/clubs/apply'
      preLoaderRoute: typeof DashboardClubsApplyIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/clubs/$id/': {
      id: '/_dashboard/clubs/$id/'
      path: '/clubs/$id'
      fullPath: '/clubs/$id'
      preLoaderRoute: typeof DashboardClubsIdIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/clubs/$id/edit': {
      id: '/_dashboard/clubs/$id/edit'
      path: '/clubs/$id/edit'
      fullPath: '/clubs/$id/edit'
      preLoaderRoute: typeof DashboardClubsIdEditRouteImport
      parentRoute: typeof DashboardRoute
    }
  }
}

interface AuthRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface DashboardRouteChildren {
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardClubsIndexRoute: typeof DashboardClubsIndexRoute
  DashboardEventsIndexRoute: typeof DashboardEventsIndexRoute
  DashboardNewsIndexRoute: typeof DashboardNewsIndexRoute
  DashboardClubsIdEditRoute: typeof DashboardClubsIdEditRoute
  DashboardClubsIdIndexRoute: typeof DashboardClubsIdIndexRoute
  DashboardClubsApplyIndexRoute: typeof DashboardClubsApplyIndexRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardClubsIndexRoute: DashboardClubsIndexRoute,
  DashboardEventsIndexRoute: DashboardEventsIndexRoute,
  DashboardNewsIndexRoute: DashboardNewsIndexRoute,
  DashboardClubsIdEditRoute: DashboardClubsIdEditRoute,
  DashboardClubsIdIndexRoute: DashboardClubsIdIndexRoute,
  DashboardClubsApplyIndexRoute: DashboardClubsApplyIndexRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  DashboardRoute: DashboardRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
