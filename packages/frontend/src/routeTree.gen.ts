/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as IndexImport } from './routes/index'
import { Route as NewsIndexImport } from './routes/news/index'
import { Route as EventsIndexImport } from './routes/events/index'
import { Route as ClubsIndexImport } from './routes/clubs/index'
import { Route as ClubsApplyIndexImport } from './routes/clubs/apply/index'
import { Route as ClubsIdIndexImport } from './routes/clubs/$id/index'
import { Route as ClubsIdEditImport } from './routes/clubs/$id/edit'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const NewsIndexRoute = NewsIndexImport.update({
  id: '/news/',
  path: '/news/',
  getParentRoute: () => rootRoute,
} as any)

const EventsIndexRoute = EventsIndexImport.update({
  id: '/events/',
  path: '/events/',
  getParentRoute: () => rootRoute,
} as any)

const ClubsIndexRoute = ClubsIndexImport.update({
  id: '/clubs/',
  path: '/clubs/',
  getParentRoute: () => rootRoute,
} as any)

const ClubsApplyIndexRoute = ClubsApplyIndexImport.update({
  id: '/clubs/apply/',
  path: '/clubs/apply/',
  getParentRoute: () => rootRoute,
} as any)

const ClubsIdIndexRoute = ClubsIdIndexImport.update({
  id: '/clubs/$id/',
  path: '/clubs/$id/',
  getParentRoute: () => rootRoute,
} as any)

const ClubsIdEditRoute = ClubsIdEditImport.update({
  id: '/clubs/$id/edit',
  path: '/clubs/$id/edit',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/clubs/': {
      id: '/clubs/'
      path: '/clubs'
      fullPath: '/clubs'
      preLoaderRoute: typeof ClubsIndexImport
      parentRoute: typeof rootRoute
    }
    '/events/': {
      id: '/events/'
      path: '/events'
      fullPath: '/events'
      preLoaderRoute: typeof EventsIndexImport
      parentRoute: typeof rootRoute
    }
    '/news/': {
      id: '/news/'
      path: '/news'
      fullPath: '/news'
      preLoaderRoute: typeof NewsIndexImport
      parentRoute: typeof rootRoute
    }
    '/clubs/$id/edit': {
      id: '/clubs/$id/edit'
      path: '/clubs/$id/edit'
      fullPath: '/clubs/$id/edit'
      preLoaderRoute: typeof ClubsIdEditImport
      parentRoute: typeof rootRoute
    }
    '/clubs/$id/': {
      id: '/clubs/$id/'
      path: '/clubs/$id'
      fullPath: '/clubs/$id'
      preLoaderRoute: typeof ClubsIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/clubs/apply/': {
      id: '/clubs/apply/'
      path: '/clubs/apply'
      fullPath: '/clubs/apply'
      preLoaderRoute: typeof ClubsApplyIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/clubs': typeof ClubsIndexRoute
  '/events': typeof EventsIndexRoute
  '/news': typeof NewsIndexRoute
  '/clubs/$id/edit': typeof ClubsIdEditRoute
  '/clubs/$id': typeof ClubsIdIndexRoute
  '/clubs/apply': typeof ClubsApplyIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/clubs': typeof ClubsIndexRoute
  '/events': typeof EventsIndexRoute
  '/news': typeof NewsIndexRoute
  '/clubs/$id/edit': typeof ClubsIdEditRoute
  '/clubs/$id': typeof ClubsIdIndexRoute
  '/clubs/apply': typeof ClubsApplyIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/clubs/': typeof ClubsIndexRoute
  '/events/': typeof EventsIndexRoute
  '/news/': typeof NewsIndexRoute
  '/clubs/$id/edit': typeof ClubsIdEditRoute
  '/clubs/$id/': typeof ClubsIdIndexRoute
  '/clubs/apply/': typeof ClubsApplyIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/clubs'
    | '/events'
    | '/news'
    | '/clubs/$id/edit'
    | '/clubs/$id'
    | '/clubs/apply'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/clubs'
    | '/events'
    | '/news'
    | '/clubs/$id/edit'
    | '/clubs/$id'
    | '/clubs/apply'
  id:
    | '__root__'
    | '/'
    | '/login'
    | '/clubs/'
    | '/events/'
    | '/news/'
    | '/clubs/$id/edit'
    | '/clubs/$id/'
    | '/clubs/apply/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoginRoute: typeof LoginRoute
  ClubsIndexRoute: typeof ClubsIndexRoute
  EventsIndexRoute: typeof EventsIndexRoute
  NewsIndexRoute: typeof NewsIndexRoute
  ClubsIdEditRoute: typeof ClubsIdEditRoute
  ClubsIdIndexRoute: typeof ClubsIdIndexRoute
  ClubsApplyIndexRoute: typeof ClubsApplyIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginRoute: LoginRoute,
  ClubsIndexRoute: ClubsIndexRoute,
  EventsIndexRoute: EventsIndexRoute,
  NewsIndexRoute: NewsIndexRoute,
  ClubsIdEditRoute: ClubsIdEditRoute,
  ClubsIdIndexRoute: ClubsIdIndexRoute,
  ClubsApplyIndexRoute: ClubsApplyIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login",
        "/clubs/",
        "/events/",
        "/news/",
        "/clubs/$id/edit",
        "/clubs/$id/",
        "/clubs/apply/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/clubs/": {
      "filePath": "clubs/index.tsx"
    },
    "/events/": {
      "filePath": "events/index.tsx"
    },
    "/news/": {
      "filePath": "news/index.tsx"
    },
    "/clubs/$id/edit": {
      "filePath": "clubs/$id/edit.tsx"
    },
    "/clubs/$id/": {
      "filePath": "clubs/$id/index.tsx"
    },
    "/clubs/apply/": {
      "filePath": "clubs/apply/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
